- route:
    id: route-c873
    from:
      id: from-db3a
      uri: direct
      parameters:
        name: getArasToken
      steps:
        - setBody:
            id: setBody-7e69
            expression:
              constant:
                id: constant-9570
                expression: >-
                  grant_type=password&scope=openid Innovator
                  offline_access&client_id=InnovatorClient&username=admin&password=innovator&database=InnovatorSolutionss
        - setHeader:
            id: setHeader-58d3
            name: Content-Type
            expression:
              constant:
                id: constant-082a
                expression: application/x-www-form-urlencoded
        - setHeader:
            id: setHeader-1636
            name: Cookie
            expression:
              constant:
                id: constant-9d0b
                expression: ${properties:aras.cookie}
        - toD:
            id: toD-b5cb
            uri: >-
              ${properties:aras.domain}/InnovatorServer/OAuthServer/connect/token
        - unmarshal:
            id: unmarshal-c814
            json:
              id: json-44d8
        - setBody:
            id: setBody-687e
            expression:
              simple:
                id: simple-38db
                expression: ${body[access_token]}
- route:
    id: route-
    from:
      id: 12311
      uri: direct
      parameters:
        name: loginERPNext
      steps:
        - log:
            id: log-erpnext-login-start
            message: üîê ƒêƒÉng nh·∫≠p ERPNext...
        - setBody:
            id: setBody-erpnext-credentials
            expression:
              constant:
                id: constant-5422
                expression: |
                  usr=Administrator&pwd=admin
        - setHeader:
            id: setHeader-erpnext-content-type
            name: Content-Type
            expression:
              constant:
                id: constant-d47a
                expression: application/x-www-form-urlencoded
        - removeHeaders:
            id: removeHeaders-clean-before-login
            pattern: "*"
            excludePattern: Content-Type
        - toD:
            id: toD-erpnext-login
            uri: https://dev-erpnext.imespro.ai/api/method/login
        - script:
            id: script-58ad
            expression:
              groovy:
                id: groovy-014f
                expression: |-
                  // L·∫•y Set-Cookie header
                                def cookies = exchange.in.getHeader("Set-Cookie")

                                def sid = ""
                                if (cookies) {
                                    if (cookies instanceof List) {
                                        cookies.each { c ->
                                            def matcher = (c =~ /sid=([^;]+)/)
                                            if (matcher.find()) sid = matcher.group(1)
                                        }
                                    } else {
                                        def matcher = (cookies =~ /sid=([^;]+)/)
                                        if (matcher.find()) sid = matcher.group(1)
                                    }
                                }

                                // Log ki·ªÉm tra
                                println "üç™ ERPNext Set-Cookie raw: ${cookies}"
                                println "üëâ Extracted SID: ${sid}"

                                // L∆∞u v√†o header v√† property
                                exchange.message.setHeader("ERPNext-SID", sid)
                                exchange.setProperty("ERPNext-SID", sid)
                                return sid
        - log:
            id: log-erpnext-cookie
            message: >-
              ‚úÖ ƒêƒÉng nh·∫≠p ERPNext th√†nh c√¥ng! Cookie:
              ${exchangeProperty.ERPNext-SID}
- route:
    id: route-db7f
    from:
      id: from-bc15
      uri: timer
      parameters:
        timerName: period
        period: 60s
      steps:
        - log:
            id: log-eb3f
            message: üöÄ B·∫Øt ƒë·∫ßu chu k·ª≥ polling d·ªØ li·ªáu t·ª´ ARAS...
        - to:
            id: to-1e84
            uri: direct
            parameters:
              name: getArasToken
        - setHeader:
            id: setHeader-8cff
            name: Authorization
            expression:
              simple:
                id: simple-6739
                expression: Bearer ${body}
        - setHeader:
            id: setHeader-506e
            name: Cookie
            expression:
              constant:
                id: constant-9589
                expression: ${properties:aras.cookie}
        - setProperty:
            id: set-current-time-minus-61s
            name: timeFilter
            expression:
              groovy:
                id: groovy-e00b
                expression: >
                  import java.time.*

                  import java.time.format.DateTimeFormatter

                  def now = ZonedDateTime.now(ZoneId.of("UTC"))

                  def minus61 = now.minusSeconds(61)

                  def formatted =
                  minus61.format(DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss"))

                  return formatted
        - toD:
            id: toD-a780
            uri: >-
              ${properties:aras.domain}/InnovatorServer/server/odata/Part?$filter=created_on
              gt '${exchangeProperty.timeFilter}'&$orderby=created_on desc
        - log:
            id: log-8e28
            message: |
              üßæ Body nh·∫≠n t·ª´ ARAS:
              ${body}
        - unmarshal:
            id: unmarshal-9d23
            json:
              id: json-c592
        - setBody:
            id: transform-json
            expression:
              groovy:
                id: groovy-613a
                expression: |
                  def input = exchange.message.body
                  def parts = input.value.collect { it ->
                      [
                          item_code: it.item_number,
                          item_name: it.name ?: it.keyed_name,
                          description: it.description ?: "",
                          item_group: "Raw Material",
                          stock_uom:  "Nos",
                          is_purchase_item: (it.make_buy == "Buy" ? 1 : 0),
                          disabled: (it.state == "Released" ? 0 : 1),
                          is_stock_item: 1,
                          is_sales_item: 1,
                          include_item_in_manufacturing: 1,
                          allow_negative_stock: 0,
                          country_of_origin: "Vietnam",
                          default_material_request_type: "Purchase",
                          end_of_life: "2099-12-31",
                          grant_commission: 1,
                          opening_stock: 0,
                          valuation_rate: 1000000
                      ]
                  }
                  return parts
        - setProperty:
            id: save-items-body
            name: itemsBody
            expression:
              simple:
                id: simple-7bfe
                expression: ${body}
        - to:
            id: to-login-erpnext
            uri: direct
            parameters:
              name: loginERPNext
        - split:
            id: split-items
            expression:
              simple:
                id: simple-19ea
                expression: ${exchangeProperty.itemsBody}
            steps:
              - log:
                  id: log-transformed1
                  message: |
                    body v√†o steps
                    ${body}
              - setProperty:
                  id: set-item-body
                  name: itemBody
                  expression:
                    simple:
                      id: simple-6797
                      expression: ${body}
              - marshal:
                  id: marshal-item-json
                  json:
                    id: json-5327
              - setHeader:
                  id: setHeader-content-type
                  name: Content-Type
                  expression:
                    constant:
                      id: constant-284e
                      expression: application/json
              - setHeader:
                  id: setHeader-cookie
                  name: Cookie
                  expression:
                    simple:
                      id: simple-785f
                      expression: >-
                        sid=${exchangeProperty.ERPNext-SID}; system_user=yes;
                        user_id=Administrator
              - setHeader:
                  id: setHeader-method
                  name: CamelHttpMethod
                  expression:
                    constant:
                      id: constant-ac43
                      expression: POST
              - log:
                  id: log-transformed
                  message: |
                    body v√†o steps
                    ${body}
              - toD:
                  id: toD-erpnext-post
                  uri: https://dev-erpnext.imespro.ai/api/resource/Item
              - log:
                  id: log-each-response
                  message: |
                    ‚úÖ ƒê√£ g·ª≠i item: ${exchangeProperty.itemBody[item_code]}
                    üì© ERPNext Response Code: ${header.CamelHttpResponseCode}
                    üì¶ Body: ${body}
