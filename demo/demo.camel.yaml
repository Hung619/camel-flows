- route:
    id: route-sap-to-erpnext
    from:
      id: from-sap-webhook
      uri: platform-http
      parameters:
        httpMethodRestrict: POST
        consumes: application/json
        path: /api/sap/production-order
      steps:
        - log:
            id: log-receive-data
            message: "Nhận dữ liệu từ SAP: ${body}"
        - unmarshal:
            id: unmarshal-json
            json:
              id: json-unmarshal
        - removeHeaders:
            id: remove-all-headers
            pattern: "*"
        - transform:
            id: transform-sap-data
            expression:
              groovy:
                id: groovy-transform
                expression: |
                  def sapData = request.body
                  exchange.setProperty("sapRawData", sapData)
                  def uomMap = [
                      "PC": "Nos",
                      "KG": "Kg",
                      "ST": "Nos"
                  ]
                  def finishedGoodItem = [
                      item_code: sapData.material,
                      item_name: sapData.materialdescription,
                      unit: uomMap.get(sapData.unit, sapData.unit ?: "Nos"),
                  ]
                  exchange.setProperty("finishedGoodItem", finishedGoodItem)

                  def componentItems = sapData.items.collect { sapItem ->
                      [
                          item_code: sapItem.itemcode,
                          item_name: sapItem.itemname,
                          quantity: sapItem.quantity,
                          unit: uomMap.get(sapItem.itemunit, sapItem.itemunit ?: "Nos"),
                      ]
                  }
                  exchange.setProperty("componentItems", componentItems)

                  def erpPoItems = [[
                      item_code: sapData.material,
                      planned_qty: sapData.orderquantity,
                      planned_start_date: sapData.startDate
                  ]]

                  exchange.setProperty("poItems", erpPoItems)

                  def erpNextData = [
                      total_planned_qty: sapData.orderquantity,
                      po_items: erpPoItems
                  ]

                  return erpNextData
        - marshal:
            id: marshal-8620
            json:
              id: json-204c
        - log:
            id: log-transformed-data
            message: "Dữ liệu đã transform: ${body}"
        - setProperty:
            id: set-erpnext-data
            name: erpNextPayload
            expression:
              simple:
                id: simple-body
                expression: ${body}
        - log:
            id: log-check-fg
            message: >-
              Kiểm tra Finished Good Item:
              ${exchangeProperty.finishedGoodItem[item_code]}
        - removeHeaders:
            id: remove-headers-check-fg
            pattern: "*"
        - setHeaders:
            id: set-headers-check-fg
            headers:
              - id: header-cookie-check-fg
                name: Cookie
                expression:
                  constant:
                    id: cookie-check-fg
                    expression: >-
                      sid=e2feea5892ce8ee0e450d600d9d434ce34ff9557ff32f724457e3f2b;
                      system_user=yes; user_id=Administrator; user_image=; 
                      system_user=yes;
                      user_image=/private/files/pxfuel%20%283%29.jpg
              - id: header-method-check-fg
                name: CamelHttpMethod
                expression:
                  constant:
                    id: method-get-fg
                    expression: GET
              - id: setHeader-9fd6
                name: Content-Type
                expression:
                  constant:
                    id: constant-b0a9
                    expression: application/json
        - toD:
            id: toD-e0a0
            uri: >-
              https://dev-erpnext.imespro.ai/api/resource/Item/${exchangeProperty.finishedGoodItem['item_code']}?bridgeEndpoint=true&throwExceptionOnFailure=false
        - choice:
            id: choice-fg-exists
            when:
              - id: when-fg-exists
                expression:
                  simple:
                    id: simple-fg-exists
                    expression: ${header.CamelHttpResponseCode} != 200
                steps:
                  - log:
                      id: log-create-fg
                      message: >-
                        Tạo Finished Good Item:
                        ${exchangeProperty.finishedGoodItem['item_code']}
                  - setBody:
                      id: set-create-fg-body
                      expression:
                        groovy:
                          id: groovy-create-fg
                          expression: |
                            def item = exchange.getProperty("finishedGoodItem")
                            return [
                                item_code: item.item_code,
                                item_name: item.item_name,
                                is_stock_item: 1,
                                stock_uom: item.unit ?: "Nos",
                                item_group: "Products"
                            ]
                  - marshal:
                      id: marshal-fg
                      json:
                        id: json-marshal-fg
                  - removeHeaders:
                      id: remove-headers-create-fg
                      pattern: "*"
                  - setHeaders:
                      id: set-headers-create-fg
                      headers:
                        - id: header-content-type-fg
                          name: Content-Type
                          expression:
                            constant:
                              id: content-json-fg
                              expression: application/json
                        - id: header-method-create-fg
                          name: CamelHttpMethod
                          expression:
                            constant:
                              id: method-post-fg
                              expression: POST
                        - id: header-cookie-create-fg
                          name: Cookie
                          expression:
                            constant:
                              id: cookie-create-fg
                              expression: >-
                                sid=6b0787ba03eeaa6788c4d4d96c6f29ee1b72b78a6e3cf88410300945;
                                system_user=yes; user_id=Administrator;
                                user_image=;  system_user=yes;
                                user_image=/private/files/pxfuel%20%283%29.jpg
                  - log:
                      id: log-5acf
                      message: "body: ${body}      headers:${headers}"
                  - to:
                      id: create-fg-item
                      uri: https
                      parameters:
                        bridgeEndpoint: true
                        throwExceptionOnFailure: false
                        httpUri: erpnext.imespro.ai/api/resource/Item
                  - choice:
                      id: choice-create-fg-result
                      when:
                        - id: when-create-fg-failed
                          expression:
                            simple:
                              id: simple-create-fg-failed
                              expression: >-
                                ${header.CamelHttpResponseCode} != 200 &&
                                ${header.CamelHttpResponseCode} != 201
                          steps:
                            - log:
                                id: log-create-fg-failed
                                message: "Lỗi tạo Finished Good Item. Response: ${body}"
                            - setProperty:
                                id: set-error-fg
                                name: hasFatalError
                                expression:
                                  constant:
                                    id: const-true-fg
                                    expression: "true"
                            - stop:
                                id: stop-on-fg-error
            otherwise:
              id: otherwise-fg-exists
              steps:
                - log:
                    id: log-fg-exists
                    message: Finished Good Item đã tồn tại
        - split:
            id: split-component-items
            expression:
              simple:
                id: simple-split-components
                expression: ${exchangeProperty.componentItems}
            steps:
              - setProperty:
                  id: set-current-component
                  name: currentComponent
                  expression:
                    simple:
                      id: simple-current-component
                      expression: ${body}
              - setProperty:
                  id: set-component-code
                  name: currentComponentCode
                  expression:
                    groovy:
                      id: groovy-component-code
                      expression: return body['item_code']
              - log:
                  id: log-check-component
                  message: "Kiểm tra component: ${exchangeProperty.currentComponentCode}"
              - removeHeaders:
                  id: remove-headers-check-component
                  pattern: "*"
              - setHeaders:
                  id: set-headers-check-component
                  headers:
                    - id: header-cookie-check-component
                      name: Cookie
                      expression:
                        constant:
                          id: cookie-check-component
                          expression: >-
                            full_name=Administrator;
                            sid=9da9065dd6b8c84a17f63b7700f1452a55441febce1b06a784a6b1dc;
                            system_user=yes; user_id=Administrator;
                            user_image=/private/files/pxfuel%20%283%29.jpg
                    - id: header-method-check-component
                      name: CamelHttpMethod
                      expression:
                        constant:
                          id: method-get-component
                          expression: GET
              - to:
                  id: check-component-exists
                  uri: https
                  parameters:
                    bridgeEndpoint: true
                    throwExceptionOnFailure: false
                    httpUri: >-
                      erpnext.imespro.ai/api/resource/Item/${exchangeProperty.currentComponentCode}
              - choice:
                  id: choice-component-exists
                  when:
                    - id: when-component-not-exists
                      expression:
                        simple:
                          id: simple-component-not-exists
                          expression: ${header.CamelHttpResponseCode} != 200
                      steps:
                        - log:
                            id: log-create-component
                            message: >-
                              Tạo component item:
                              ${exchangeProperty.currentComponentCode}
                        - setBody:
                            id: set-create-component-body
                            expression:
                              groovy:
                                id: groovy-create-component
                                expression: >
                                  def item =
                                  exchange.getProperty("currentComponent")

                                  return [
                                      item_code: item.item_code,
                                      item_name: item.item_name,
                                      is_stock_item: 1,
                                      stock_uom: item.unit ?: "Nos",
                                      item_group: "Raw Material"
                                  ]
                        - marshal:
                            id: marshal-component
                            json:
                              id: json-marshal-component
                        - removeHeaders:
                            id: remove-headers-create-component
                            pattern: "*"
                        - setHeaders:
                            id: set-headers-create-component
                            headers:
                              - id: header-content-type-component
                                name: Content-Type
                                expression:
                                  constant:
                                    id: content-json-component
                                    expression: application/json
                              - id: header-method-create-component
                                name: CamelHttpMethod
                                expression:
                                  constant:
                                    id: method-post-component
                                    expression: POST
                              - id: header-cookie-create-component
                                name: Cookie
                                expression:
                                  constant:
                                    id: cookie-create-component
                                    expression: >-
                                      full_name=Administrator;
                                      sid=9da9065dd6b8c84a17f63b7700f1452a55441febce1b06a784a6b1dc;
                                      system_user=yes; user_id=Administrator;
                                      user_image=/private/files/pxfuel%20%283%29.jpg
                        - to:
                            id: create-component-item
                            uri: https
                            parameters:
                              bridgeEndpoint: true
                              throwExceptionOnFailure: false
                              httpUri: erpnext.imespro.ai/api/resource/Item
                        - choice:
                            id: choice-create-component-result
                            when:
                              - id: when-create-component-failed
                                expression:
                                  simple:
                                    id: simple-create-component-failed
                                    expression: >-
                                      ${header.CamelHttpResponseCode} != 200 &&
                                      ${header.CamelHttpResponseCode} != 201
                                steps:
                                  - log:
                                      id: log-create-component-failed
                                      message: >-
                                        Lỗi tạo component
                                        ${exchangeProperty.currentComponentCode}. 
                                        Response: ${body}
                                  - setProperty:
                                      id: set-error-component
                                      name: hasComponentError
                                      expression:
                                        constant:
                                          id: const-true-component
                                          expression: "true"
                  otherwise:
                    id: otherwise-component-exists
                    steps:
                      - log:
                          id: log-component-exists
                          message: >-
                            Component ${exchangeProperty.currentComponentCode}
                            đã tồn tại
        - choice:
            id: choice-has-component-error
            when:
              - id: when-has-component-error
                expression:
                  simple:
                    id: simple-has-component-error
                    expression: ${exchangeProperty.hasComponentError} == 'true'
                steps:
                  - log:
                      id: log-error-abort-bom
                      message: Có lỗi khi tạo components, dừng flow
                  - setHeader:
                      id: set-error-header-component
                      name: Content-Type
                      expression:
                        constant:
                          id: const-json-error-component
                          expression: application/json
                  - setBody:
                      id: set-error-body-component
                      expression:
                        simple:
                          id: simple-error-body-component
                          expression: >-
                            {"status": "error", "message": "Không thể tạo một số
                            component items"}
                  - stop:
                      id: stop-on-component-error
            otherwise:
              id: otherwise-create-bom
              steps:
                - log:
                    id: log-create-bom
                    message: Tất cả items đã sẵn sàng, tiến hành tạo BOM
                - removeHeaders:
                    id: remove-headers-check-bom
                    pattern: "*"
                - setHeaders:
                    id: set-headers-check-bom
                    headers:
                      - id: header-cookie-check-bom
                        name: Cookie
                        expression:
                          constant:
                            id: cookie-check-bom
                            expression: >-
                              full_name=Administrator;
                              sid=e2feea5892ce8ee0e450d600d9d434ce34ff9557ff32f724457e3f2b;
                              system_user=yes; user_id=Administrator;
                              user_image=/private/files/pxfuel%20%283%29.jpg
                      - id: header-method-check-bom
                        name: CamelHttpMethod
                        expression:
                          constant:
                            id: method-get-bom
                            expression: GET
                - toD:
                    id: toD-e0a00
                    uri: >-
                      https://dev-erpnext.imespro.ai/api/resource/BOM/${exchangeProperty.finishedGoodItem['item_code']}?bridgeEndpoint=true&throwExceptionOnFailure=false
                - setProperty:
                    id: save-bom-check-response
                    name: bomCheckResponse
                    expression:
                      simple:
                        id: simple-bom-response
                        expression: ${body}
                - choice:
                    id: choice-381b
                    when:
                      - id: when-cefc
                        expression:
                          simple:
                            id: simple-6f7c
                            expression: ${header.CamelHttpResponseCode} != 200
                        steps:
                          - log:
                              id: log-bom-not-exists
                              message: BOM chưa tồn tại, tiến hành tạo mới
                          - setBody:
                              id: set-create-bom-body
                              expression:
                                groovy:
                                  id: groovy-create-bom
                                  expression: >
                                    def fgItem =
                                    exchange.getProperty("finishedGoodItem")

                                    def components =
                                    exchange.getProperty("componentItems")


                                    def bomItems = components.collect { comp ->
                                        [
                                            item_code: comp.item_code,
                                            qty: comp.quantity,
                                            uom: comp.unit ?: "Nos"
                                        ]
                                    }


                                    return [
                                        item: fgItem.item_code,
                                        quantity: 1,
                                        uom: fgItem.unit ?: "Nos",
                                        items: bomItems,
                                        is_active: 1,
                                        is_default: 1
                                    ]
                          - marshal:
                              id: marshal-bom
                              json:
                                id: json-marshal-bom
                          - removeHeaders:
                              id: remove-headers-create-bom
                              pattern: "*"
                          - setHeaders:
                              id: set-headers-create-bom
                              headers:
                                - id: header-content-type-bom
                                  name: Content-Type
                                  expression:
                                    constant:
                                      id: content-json-bom
                                      expression: application/json
                                - id: header-method-create-bom
                                  name: CamelHttpMethod
                                  expression:
                                    constant:
                                      id: method-post-bom
                                      expression: POST
                                - id: header-cookie-create-bom
                                  name: Cookie
                                  expression:
                                    constant:
                                      id: cookie-create-bom
                                      expression: >-
                                        full_name=Administrator;
                                        sid=88944378c00d9f51a3ca8c27f8021726f9088be684d34358e321f70d;
                                        system_user=yes; user_id=Administrator;
                                        user_image=/private/files/pxfuel%20%283%29.jpg
                          - log:
                              id: log-bom-payload
                              message: "Payload tạo BOM: ${body}"
                          - to:
                              id: create-bom
                              uri: https
                              parameters:
                                bridgeEndpoint: true
                                throwExceptionOnFailure: false
                                httpUri: erpnext.imespro.ai/api/resource/BOM
                          - choice:
                              id: choice-create-bom-result
                              when:
                                - id: when-create-bom-success
                                  expression:
                                    simple:
                                      id: simple-create-bom-success
                                      expression: >-
                                        ${header.CamelHttpResponseCode} == 200
                                        || ${header.CamelHttpResponseCode} ==
                                        201
                                  steps:
                                    - log:
                                        id: log-create-bom-success
                                        message: "Tạo BOM thành công. Response: ${body}"
                              otherwise:
                                id: otherwise-create-bom-failed
                                steps:
                                  - log:
                                      id: log-create-bom-failed
                                      message: >-
                                        Lỗi tạo BOM.  HTTP Code:
                                        ${header.CamelHttpResponseCode}. 
                                        Response: ${body}
                                  - setProperty:
                                      id: set-error-bom
                                      name: hasBomError
                                      expression:
                                        constant:
                                          id: const-true-bom
                                          expression: "true"
                                  - stop:
                                      id: stop-on-bom-error
                    otherwise:
                      id: otherwise-bom-exists
                      steps:
                        - log:
                            id: log-bom-exists
                            message: >-
                              BOM đã tồn tại cho item
                              ${exchangeProperty.finishedGoodItem[item_code]}     
                - log:
                    id: log-create-plan
                    message: Tiến hành tạo Production Plan
                - setBody:
                    id: restore-body
                    expression:
                      simple:
                        id: simple-restore
                        expression: ${exchangeProperty.erpNextPayload}
                - log:
                    id: log-create-plannnnnaa
                    message: check3
                - removeHeaders:
                    id: remove-headers-final
                    pattern: "*"
                - setHeaders:
                    id: set-headers-final
                    headers:
                      - id: header-content-final
                        name: Content-Type
                        expression:
                          constant:
                            id: const-json-final
                            expression: application/json
                      - id: header-method-final
                        name: CamelHttpMethod
                        expression:
                          constant:
                            id: const-post-final
                            expression: POST
                      - id: header-cookie-final
                        name: Cookie
                        expression:
                          constant:
                            id: cookie-final
                            expression: >-
                              full_name=Administrator;
                              sid=7fef9d42f1639651e5aabca2933a4195b6aba4ef9932b5fea424d738;
                              system_user=yes; user_id=Administrator;
                              user_image=/private/files/pxfuel%20%283%29.jpg
                - log:
                    id: log-production-plan-payload
                    message: "Payload Production Plan: ${body}"
                - to:
                    id: create-production-plan
                    uri: https
                    parameters:
                      bridgeEndpoint: true
                      throwExceptionOnFailure: false
                      httpUri: >-
                        erpnext.imespro.ai/api/method/imes.api.production_plan.production_plan
                - choice:
                    id: choice-plan-result
                    when:
                      - id: when-plan-success
                        expression:
                          simple:
                            id: simple-plan-success
                            expression: >-
                              ${header.CamelHttpResponseCode} == 200 ||
                              ${header.CamelHttpResponseCode} == 201
                        steps:
                          - log:
                              id: log-plan-success
                              message: >-
                                Tạo Production Plan thành công. Response:
                                ${body}
                          - setBody:
                              id: set-success-body
                              expression:
                                simple:
                                  id: simple-success
                                  expression: >-
                                    {"status": "success", "message": "Production
                                    Plan created successfully with BOM"}
                    otherwise:
                      id: otherwise-plan-failed
                      steps:
                        - log:
                            id: log-plan-failed
                            message: >-
                              Lỗi khi tạo Production Plan.  HTTP Code:
                              ${header.CamelHttpResponseCode}.  Response:
                              ${body}
                        - setHeader:
                            id: set-error-header-plan
                            name: Content-Type
                            expression:
                              constant:
                                id: const-json-error
                                expression: application/json
                        - setBody:
                            id: set-error-body-plan
                            expression:
                              simple:
                                id: simple-error-plan
                                expression: >-
                                  {"status": "error", "message": "Failed to
                                  create Production Plan", "erpnext_response":
                                  ${body}}
